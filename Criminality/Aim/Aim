local Camera = workspace.CurrentCamera
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local Entities = game:GetService("Players")
local LocalPlayer = Entities.LocalPlayer
local Mouse = LocalPlayer:GetMouse()

Aimsettings = {
    Aimbot = true,
    Aiming = false,
    Aimbot_AimPart = "Head",
    Aimbot_TeamCheck = true,
    Aimbot_Draw_FOV = true,
    Aimbot_FOV_Radius = 200,
    Aimbot_FOV_Color = Color3.fromRGB(255,255,255)
}

local fovcircle = Drawing.new("Circle")
fovcircle.Visible = Aimsettings.Aimbot_Draw_FOV
fovcircle.Radius = Aimsettings.Aimbot_FOV_Radius
fovcircle.Color = Aimsettings.Aimbot_FOV_Color
fovcircle.Thickness = 1
fovcircle.Filled = false
fovcircle.Transparency = 1

fovcircle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)

UIS.InputBegan:Connect(function(i)
    if i.UserInputType == Enum.UserInputType.MouseButton2 then
        Aimsettings.Aiming = true
    end
end)

UIS.InputEnded:Connect(function(i)
    if i.UserInputType == Enum.UserInputType.MouseButton2 then
        Aimsettings.Aiming = false
    end
end)

RunService.RenderStepped:Connect(function()
    
    local dist = math.huge
    local closest_char = nil

    if Aimsettings.Aiming then

        for i,v in next, Entities:GetChildren() do 

            if v ~= LocalPlayer and
            v.Character and
            v.Character:FindFirstChild("HumanoidRootPart") and
            v.Character:FindFirstChild("Humanoid") and
            v.Character:FindFirstChild("Humanoid").Health > 0 then

                if Aimsettings.Aimbot_TeamCheck == true and
                v.Team ~= LocalPlayer.Team or
                Aimsettings.Aimbot_TeamCheck == false then

                    local char = v.Character
                    local char_part_pos, is_onscreen = Camera:WorldToViewportPoint(char[Aimsettings.Aimbot_AimPart].Position)

                    if is_onscreen then

                        local mag = (Vector2.new(Mouse.X, Mouse.Y) - Vector2.new(char_part_pos.X, char_part_pos.Y)).Magnitude

                        if mag < dist and mag < Aimsettings.Aimbot_FOV_Radius then

                            dist = mag
                            closest_char = char

                        end
                    end
                end
            end
        end

        if closest_char ~= nil and
        closest_char:FindFirstChild("HumanoidRootPart") and
        closest_char:FindFirstChild("Humanoid") and
        closest_char:FindFirstChild("Humanoid").Health > 0 then

            Camera.CFrame = CFrame.new(Camera.CFrame.Position, closest_char[Aimsettings.Aimbot_AimPart].Position)
        end
    end
end)



-- Aimbot Tutorial
--[[-- variables
local UIS = game.UserInputService
local camera = game.workspace.CurrentCamera
-- gets closest player
function getClosest()
    local closestDistance = math.huge
    local closestPlayer = nil
    for i,v in pairs(game.Players:GetChildren()) do
        if v ~= game.Players.LocalPlayer and v.Team ~= game.Players.LocalPlayer.Team then
            local distance = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).magnitude
            if distance < closestDistance then
                closestDistance = distance
                closestPlayer = v
            end
        end
    end
    return closestPlayer
end
-- starts loop
UIS.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        _G.aim = true
        while wait() do
            camera.CFrame = CFrame.new(camera.CFrame.Position, getClosest().Character.Head.Position)
            if _G.aim == false then return end
        end
    end
end)
UIS.InputEnded:Connect(function (input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        _G.aim = false
    end
end)]]